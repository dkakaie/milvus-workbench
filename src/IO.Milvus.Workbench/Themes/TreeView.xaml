<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converter="clr-namespace:IO.Milvus.Workbench.Converter"
    xmlns:models="clr-namespace:IO.Milvus.Workbench.Models">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="./Icons.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="Milvus.TreeviewItem" TargetType="{x:Type TreeViewItem}">
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="IsExpanded" Value="{Binding IsExpanded, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
        <Setter Property="IsSelected" Value="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
        <!--<Setter Property="Visibility" Value="{Binding Visibility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />-->

        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <ControlTemplate.Resources>
                        <converter:IndentConverter x:Key="indentConverter" />
                    </ControlTemplate.Resources>
                    <Grid Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border
                            Name="itemBackground"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid Background="Transparent">
                                <Grid
                                    x:Name="ItemRoot"
                                    Margin="{Binding Converter={StaticResource indentConverter}, RelativeSource={RelativeSource TemplatedParent}}"
                                    Background="Transparent">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="16" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <ToggleButton
                                        x:Name="Expander"
                                        HorizontalAlignment="Left"
                                        ClickMode="Press"
                                        IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Focusable" Value="False" />
                                                <Setter Property="Width" Value="16" />
                                                <Setter Property="Height" Value="16" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Border
                                                                Width="16"
                                                                Height="16"
                                                                Padding="5"
                                                                Background="Transparent">
                                                                <Path
                                                                    x:Name="ExpandPath"
                                                                    Data="M0,0 L0,6 L6,0 z"
                                                                    Fill="#66645e"
                                                                    Stroke="#66645e">
                                                                    <Path.RenderTransform>
                                                                        <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                    </Path.RenderTransform>
                                                                </Path>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter TargetName="ExpandPath" Property="RenderTransform">
                                                                        <Setter.Value>
                                                                            <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter TargetName="ExpandPath" Property="Fill" Value="#66645e" />
                                                                    <Setter TargetName="ExpandPath" Property="Stroke" Value="#66645e" />
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="ExpandPath" Property="Stroke" Value="#66645e" />
                                                                    <Setter TargetName="ExpandPath" Property="Fill" Value="#66645e" />
                                                                </Trigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver" Value="True" />
                                                                        <Condition Property="IsChecked" Value="True" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="ExpandPath" Property="Stroke" Value="#66645e" />
                                                                    <Setter TargetName="ExpandPath" Property="Fill" Value="#66645e" />
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <ContentPresenter
                                        x:Name="PART_Header"
                                        Grid.Column="1"
                                        HorizontalAlignment="Stretch"
                                        ContentSource="Header" />
                                </Grid>
                            </Grid>

                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--<DataTrigger Binding="{Binding IsGrouping}" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </DataTrigger>-->
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <!--  选中的颜色  -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="itemBackground" Property="Background" Value="#FF0078D7" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False" />
                                <Condition SourceName="itemBackground" Property="IsMouseOver" Value="true" />
                            </MultiTrigger.Conditions>
                            <!--  鼠标悬浮颜色  -->
                            <Setter TargetName="itemBackground" Property="Background" Value="#B290C3EC" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>